@model Exam.Web.Models.ExamTakeViewModel
@{
    ViewData["Title"] = "Take Exam";
}
<div class="d-flex justify-content-between align-items-center mb-3">
    <h1 class="h3 mb-0">@Model.SubjectName</h1>
    <div class="d-flex align-items-center gap-3">
        <div class="text-muted">Time left:</div>
        <div id="timer" class="badge text-bg-primary fs-6"></div>
    </div>
</div>

<form asp-action="Submit" method="post" id="takeExamForm">
    <div class="d-grid gap-4">
        @for (int i = 0; i < Model.Questions.Count; i++)
        {
            var q = Model.Questions[i];
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <div class="fw-semibold">Question @(i+1)</div>
                            <div class="fs-5">@q.Header</div>
                            @if (!string.IsNullOrWhiteSpace(q.Body))
                            {
                                <div class="text-muted">@q.Body</div>
                            }
                        </div>
                        <span class="badge rounded-pill text-bg-secondary">@q.Mark mark(s)</span>
                    </div>
                    <div class="mt-3">
                        @if (q.Type == Exam.Web.Models.QuestionType.MultipleChoice)
                        {
                            for (int a = 0; a < q.Answers.Count; a++)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" asp-for="Questions[@i].SelectedAnswerIndex" value="@a" id="q@i-a@a">
                                    <label class="form-check-label" for="q@i-a@a">@q.Answers[a].Text</label>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="radio" asp-for="Questions[@i].SelectedAnswerIndex" value="0" id="q@i-true">
                                <label class="form-check-label" for="q@i-true">True</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" asp-for="Questions[@i].SelectedAnswerIndex" value="1" id="q@i-false">
                                <label class="form-check-label" for="q@i-false">False</label>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="d-flex gap-2 mt-4">
        <button class="btn btn-primary" type="submit">Submit</button>
        <a class="btn btn-secondary" href="@Url.Action("Index","Home")">Cancel</a>
    </div>
</form>

@section Scripts {
<script>
(function(){
  const totalMinutes = @Model.DurationMinutes;
  const timerEl = document.getElementById('timer');
  const endAt = Date.now() + totalMinutes * 60 * 1000;
  function tick(){
    const ms = Math.max(0, endAt - Date.now());
    const m = Math.floor(ms/60000);
    const s = Math.floor((ms%60000)/1000);
    timerEl.textContent = `${m.toString().padStart(2,'0')}:${s.toString().padStart(2,'0')}`;
    if (ms <= 0){
      document.getElementById('takeExamForm').submit();
      return;
    }
    setTimeout(tick, 1000);
  }
  tick();
})();
</script>
}